{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.22000}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9  Schema:\par
 - Users (\ul Username\ulnone , Password, ContactInfoID)\par
    -  ContactInfo Embed( FirstName, LastName, BirthDate, Email, Phone)\par
avoids costly joins by embedding\par
\par
 - FollowedSales (\ul Username\ulnone , \ul FollowedSale\ulnone )\par
    - Foreign Key Username references Users\par
    - Foreign Key FollowedSale references YardSales\par
\par
 - YardSales (\ul SaleID\ulnone , Username, Date, Location, Description, Type)\par
embed document Location : (City, State, Address)\par
    - Foreign Key Username references Users (Third Normal Form at work)\par
\par
\par
\par
\par
# TODO - REVIEW TABLE NAME EXPLANATIONS #######################################\par
Table name explanations:\par
 - Users:\par
    - each row contains information specific to an app user\par
    - Username is the unique primary key for each user\par
    - Username is referenced by content created and/or followed by the user\par
    - this table references the ContactInfo table\par
 - ContactInfo:\par
    - each row contains the contact information for the single user that contains a reference to it\par
 - FollowedUser\par
    - each row contains a user and a single user whose content they prefer to view\par
    - Username and FollowedUser are a composite key but neither are uniqe alone in this table\par
    - Username and FollowedUser both reference a separate unique primary key in Users\par
 - FollowedSales\par
    - each row contains a user and a SaleID from the YardSale table\par
    - Username and FollowedSale are a composite key but neither are uniqe alone in this table\par
    - Username references a unique primary key in Users\par
    - FollowedSale references a unique primary key in YardSales\par
 - YardSales:\par
    - each row contains information specific to a sale\par
    - each sale references the Username primary key of the user that created it.\par
    - many sales can reference the same Username but each has a uniqe SaleID\par
    - each sale primary key is referenced by tables with information unique to that sale.\par
 - Location:\par
    - each row contains the location information for the single sale that contains a reference to it\par
 - Items:\par
    - each row contains information specific to an item\par
    - each item references the YardSales primary key of the sale for which it was created.\par
    - many items can reference the same SaleID but each has a uniqe ItemID\par
    - each item primary key is referenced by tables with information unique to that sale.\par
 - Images:\par
    - each row contains information specific to an image\par
    - each image references either the Items or YardSales primary key of the sale for which it was created.\par
    - many images can reference the same SaleID or ItemID but each has a uniqe ImageID\par
\par
Column name explanations:\par
 - Users.Username\par
    - Primary key used to identify unique users\par
 - Users.Password\par
    - unique identifier used to authenticate user and log them in to their account\par
 - Users.ContactInfoID\par
    - foreign key linking the user to their contact info\par
 - ContactInfo.ContactInfoID\par
    - primary key for the users contact information table\par
 - ContactInfo.FirstName\par
    - users first name\par
 - ContactInfo.LastName\par
    - users last name\par
 - ContactInfo.BirthDate\par
    - users birth date\par
 - ContactInfo.Email\par
    - users email address\par
 - ContactInfo.Phone\par
    - users phone number\par
 - FollowedUsers.Username\par
    - a foreign key referencing the user who is following another user\par
 - FollowedUsers.FollowedUser\par
    - a foreign key referencing the user who is being followed by another user\par
 - FollowedSale.Username\par
    - a foreign key referencing the user following a sale\par
 - FollowedSale.FollowedSale\par
    - a foreign key referencing the yard sale being followed\par
 - YardSales.SaleID\par
    - the primary key identifying a unique yard sale\par
 - YardSales.Username\par
    - a foreign key referencing the user who posted the yard sale\par
 - YardSales.Date\par
    - the date the yard sale was posted\par
 - YardSales.Location\par
    - a foreign key to the id for the location of the yard sale\par
 - YardSales.Description\par
    - a description of the yard sale\par
 - YardSales.Type\par
    - the type of sale being posted (yard sale, estate sale, etc)\par
 - Location.LocationID\par
    - the primary key for the location of the sale\par
 - Location.City\par
    - the city the sale is located in\par
 - Location.State\par
    - the state the sale is located in\par
 - Location.Address\par
    - the address of the sale\par
 - Items.ItemID\par
    - the primary key for an item\par
 - Items.Sale\par
    - a foreign key referencing the item to the sale it is sold at\par
 - Items.Title\par
    - a name or title for the item\par
 - Items.Description\par
    - a description of the item\par
 - Items.Price\par
    - the items price\par
 - Images.ImageID\par
    - a primary key for a given image\par
 - Images.Item\par
    - an optional foreign key for the item being displayed\par
 - Images.Sale\par
    - a foreign key for the sale associated with the image\par
 - Images.Url\par
    - the url for the image\par
\par
# TODO - ADD EVIDENCE OF NORMALIZATION ########################################\par
Evidence of Normalization:\par
 - 1NF: In every table we have made sure that none of the attributes represent multivalued lists. All values are atomic.\par
 - 2NF: Every table has either a singular primary key or, in instances where we have a composite key, the composite primary key are\par
        the only attributes in the table making it impossible for our tables to not be in 2NF.\par
 - 3NF: In every relation, the primary key or composite keys are the only attributes that functionally determine any other attribute in the relation.\par
 - 4NF: The only violation we had of 4NF was an Images table that stored both images for Items and for YardSales. However, with Item and YardSale images\par
        separated into ItemImages and YardSaleImages we no longer have any relations with multi-valued dependencies.\par
\par
# Notes:\par
#YardSales.Types: yard sale, potluck, estate sale, open house, farmers' market, etc.\par
\par
# Notes From Benjamin:\par
# It's likely unnecessary to have FollowedUserID and FollowedSalesID fields in the FollowedUsers and FollowedSales tables.\par
# Because they each represent a unique one-to-one relationship we can set the pairing of the ForeignKey IDs as a the Primary Key.\par
#^^ Good catch, fixed this. - Nathan\par
\par
# There are a few other things that we should probably have a meeting to discuss what the vision of the app is in more detail to\par
# determine what sort of functionality we may need to know what more or less we need for this schema.\par
\par
# Notes from Caleb:\par
# I'm not seeing where the Yard sale is linked to the user who posted the sale. That is likely something we will need to look\par
# up. Currently you can only see what sales a user has followed. I think we could add the UserID to YardSales for looking up this.\par
#^^ Good catch, fixed this. - Nathan\par
\par
# Notes from Nathan:\par
# I'd like to make it so that images must reference either a yard sale or an item.\par
# This would prevent images from being removed from an item/sale but not being removed from the database.\par
# Is it possible within a database to allow one or the other to be null but not both?\par
# If not, should we approach the images table differently?\par
# I thought of combining the two foreign key columns but there's no guarantee\par
# that ItemIDs are unique from SaleIDs\par
# Also, I thought of making urls the primary key, but it seems like that would\par
# be problematic. There are multiple reasons why a url might need to be changed\par
# even for the same image.\par
#\par
# I added TODOs: review table name explanations, add column name explanations,\par
# add evidence of normalization.\par
}
 